// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Uzerai.Dotnet.Playground.DI.Data;

#nullable disable

namespace Uzerai.Dotnet.Playground.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250311215725_InitializeDatabase")]
    partial class InitializeDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Authentication.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Auth0UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("auth0_user_id");

                    b.Property<Instant>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Instant?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<Instant>("LastLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_login");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_id");

                    b.Property<Instant>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Auth0UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_users_auth0_user_id");

                    b.HasIndex("Email")
                        .HasDatabaseName("ix_users_email");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_users_organization_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Authorization.Permissions.OrganizationPermission", b =>
                {
                    b.Property<string>("OrganizationUserId")
                        .HasColumnType("text")
                        .HasColumnName("organization_user_id");

                    b.Property<int>("Permission")
                        .HasColumnType("integer")
                        .HasColumnName("permission");

                    b.Property<Guid>("OrganizationUserOrganizationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_user_organization_id");

                    b.Property<Guid>("OrganizationUserUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_user_user_id");

                    b.HasKey("OrganizationUserId", "Permission")
                        .HasName("pk_organization_permission");

                    b.HasIndex("OrganizationUserOrganizationId", "OrganizationUserUserId")
                        .HasDatabaseName("ix_organization_permission_organization_user_organization_id_o");

                    b.ToTable("organization_permission", (string)null);
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Organization.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Instant>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Instant?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Instant>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_organization");

                    b.ToTable("organization", (string)null);
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Organization.OrganizationUser", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("OrganizationId", "UserId")
                        .HasName("pk_organization_user");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_organization_user_user_id");

                    b.ToTable("organization_user", (string)null);
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Authentication.User", b =>
                {
                    b.HasOne("Uzerai.Dotnet.Playground.Model.Organization.Organization", null)
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("fk_users_organization_organization_id");
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Authorization.Permissions.OrganizationPermission", b =>
                {
                    b.HasOne("Uzerai.Dotnet.Playground.Model.Organization.OrganizationUser", "OrganizationUser")
                        .WithMany("Permissions")
                        .HasForeignKey("OrganizationUserOrganizationId", "OrganizationUserUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organization_permission_organization_user_organization_user");

                    b.Navigation("OrganizationUser");
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Organization.OrganizationUser", b =>
                {
                    b.HasOne("Uzerai.Dotnet.Playground.Model.Organization.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organization_user_organization_organization_id");

                    b.HasOne("Uzerai.Dotnet.Playground.Model.Authentication.User", "User")
                        .WithMany("OrganizationUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organization_user_users_user_id");

                    b.Navigation("Organization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Authentication.User", b =>
                {
                    b.Navigation("OrganizationUsers");
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Organization.Organization", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Uzerai.Dotnet.Playground.Model.Organization.OrganizationUser", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
